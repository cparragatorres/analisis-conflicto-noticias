Entrada: Un JSON con las URLs y sus contenidos raspados, siguiendo esta estructura:

{
  "https://ejemplo1.com": "Contenido raspado del link",
  "https://ejemplo2.com": "Contenido raspado del link",
  "https://ejemplo3.com": "Contenido raspado del link"
}
Instrucciones:

1. Filtrar Enlaces Válidos e Inválidos:

- Un enlace válido es aquel que contiene información relevante para un análisis de conflictos sociales o movimientos sociales, que no esté vacío, que no presente errores obvios de scraping y que no esté incompleto.
- Un enlace inválido es aquel cuyo contenido está vacío, contiene errores de scraping ("Error al scrapear"), tiene información irrelevante, o no permite identificar un conflicto o movimiento social. También es inválido si el contenido no proporciona detalles suficientes sobre las causas, actores, fechas, zonas, impacto o soluciones de un conflicto social.

2. Clasificación:

- Enlaces válidos: Los enlaces válidos deben ser listados con su respectivo contenido.
- Enlaces inválidos: Los enlaces inválidos deben ser listados junto con el motivo del descarte, como:
  -- "Error al scrapear"
  -- "Contenido vacío"
"Contenido irrelevante"

Salida esperada:

La salida final debe tener la siguiente estructura:
{
  "links_validos": {
    "https://ejemplo1.com": "Contenido del enlace válido",
    "https://ejemplo2.com": "Contenido del enlace válido"
  },
  "links_invalidos": {
    "https://ejemplo3.com": "Error al scrapear",
    "https://ejemplo4.com": "Contenido vacío"
  },
  "total_links": 100,
  "total_links_validos": 80,
  "total_links_invalidos": 20
}